@startuml

class Medicalcase {
  - title : String
  - owner : User
  - items : List<String>
  - members : Set<User>
  - reactions : Set<User>
  - hashtags : Set<Hashtag>
  - votingOptions : LinkedHashSet<String>
  + react(user : User) : void
  + addMember(user : User) : void
  + edit() : void
  + viewVotes() : void
  + viewMembers() : void
  + castVote(user : User) : void
  + evaluateVotes() : void
  + openChat() : void
}

class User {
  - email : Email
  - hashedPassword : Password
  - profile : UserProfile
  - socials : UserSocials
  - tags : Set<Hashtag>
  - rating : Integer
  - verified : boolean
  - messenger : Messenger
  + verify() : void
  + setter/getter()
}

class UserSocials {
  - relation : Map<Integer, Relation>
  + add(user : User) : User
  + accept(user : User) : User
  + deny(user : User) : User
}

enum Relation {
  FRIENDS, INCOMING, OUTGOING
}

class UserProfile {
  - name : String
  - title : String
  - location : String
  - language : String
}

abstract class Hashtag {
  - static tags : Set<String>
  + readTags() : void
}

class Specialization {
}

class CaseTags {
}

class Media {
  - path : String
  - mime : String
  - fileSize : Integer
}

class Image {
  - width : int
  - height : int
  - alternativeText : String
}

class Email {
  - address : String
}

class Password {
  - hashedPassword : char[]
  + hashPassword(String password) : String
  + checkPasswords(String password, String password2) : String
}

class Messenger{
 - chats : List<Chat>
 + openChat(id : Integer) : void
 + addChat(user... : User) : void
}

class Chat {
  - id : Integer
  - name : String
  - members : Set<User>
  - history : List<Message>
  + sendMessage(content : String, attachments : List<Media>) : voi
  + reply(message : Message) : void
  + viewMembers() : void
}

class Message {
  - sender : User
  - timestamp : Instant
  - content : String
  - attachments : List<Media>
  - status : Status
}

enum Status {
  SENT, RECEIVED, DELIEVERED, SEEN
}

class BaseEntity {

  - id : Integer
  - createdAt : Instant
  - updatedAt : Instant
}

User -- Medicalcase

User -- Email

User -- Password

User -- UserProfile

User -- UserSocials

User -- Messenger

Chat -- Message

Messenger -- Chat

Message -- Status

BaseEntity <|-- User

BaseEntity <|-- Chat

BaseEntity <|-- Medicalcase

BaseEntity <|-- Media

Media <|-- Image

UserSocials -- Relation

Hashtag <|-- CaseTags

Hashtag <|-- Specialization

Hashtag -- User

Hashtag -- Medicalcase

@enduml